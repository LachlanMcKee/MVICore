[versions]
kotlinVersion = "1.6.21"
detekt = "1.21.0"

# Android
androidLifecycleVersion = "2.2.0"
androidAppCompatVersion = "1.3.1"
androidMaterialVersion = "1.2.1"
constraintLayoutVersion = "2.0.2"

# Rx
rxJavaVersion = "2.2.10"
rxKotlinVersion = "2.4.0"
rxAndroidVersion = "2.1.1"

# DI
daggerVersion = "2.43.2"

# Utils
debugDrawerVersion = "0.9.0"
timberVersion = "5.0.1"
scalpelVersion = "1.1.2"
glideVersion = "4.13.2"

# Testing
okhttpVersion = "3.10.0"
retrofitVersion = "2.4.0"
gsonVersion = "2.8.5"

# Testing
junitVersion = "4.12"
supportTestVersion = "1.3.0"
mockitoKotlinVersion = "4.0.0"

[libraries]
# Kotlin
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk7", version.ref = "kotlinVersion" }

# Android
androidx-lifecycle-java8 = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "androidLifecycleVersion" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidAppCompatVersion" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintLayoutVersion" }
google-material = { module = "com.google.android.material:material", version.ref = "androidMaterialVersion" }

# Rx
rxjava2 = { module = "io.reactivex.rxjava2:rxjava", version.ref = "rxJavaVersion" }
rxkotlin = { module = "io.reactivex.rxjava2:rxkotlin", version.ref = "rxKotlinVersion" }
rxandroid = { module = "io.reactivex.rxjava2:rxandroid", version.ref = "rxAndroidVersion" }

# DI
dagger-runtime = { module = "com.google.dagger:dagger", version.ref = "daggerVersion" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "daggerVersion" }
dagger-android-runtime = { module = "com.google.dagger:dagger-android", version.ref = "daggerVersion" }
dagger-android-support = { module = "com.google.dagger:dagger-android-support", version.ref = "daggerVersion" }
dagger-android-processor = { module = "com.google.dagger:dagger-android-processor", version.ref = "daggerVersion" }

# DebugDrawer
debugdrawer-impl = { module = "com.github.lenguyenthanh.debugdrawer:debugdrawer", version.ref = "debugDrawerVersion" }
debugdrawer-base = { module = "com.github.lenguyenthanh.debugdrawer:debugdrawer-base", version.ref = "debugDrawerVersion" }
debugdrawer-view-impl = { module = "com.github.lenguyenthanh.debugdrawer:debugdrawer-view", version.ref = "debugDrawerVersion" }
debugdrawer-noop = { module = "com.github.lenguyenthanh.debugdrawer:debugdrawer-no-op", version.ref = "debugDrawerVersion" }
debugdrawer-view-noop = { module = "com.github.lenguyenthanh.debugdrawer:debugdrawer-view-no-op", version.ref = "debugDrawerVersion" }
debugdrawer-commons = { module = "com.github.lenguyenthanh.debugdrawer:debugdrawer-commons", version.ref = "debugDrawerVersion" }
debugdrawer-actions = { module = "com.github.lenguyenthanh.debugdrawer:debugdrawer-actions", version.ref = "debugDrawerVersion" }
debugdrawer-scalpel = { module = "com.github.lenguyenthanh.debugdrawer:debugdrawer-scalpel", version.ref = "debugDrawerVersion" }
debugdrawer-timber = { module = "com.github.lenguyenthanh.debugdrawer:debugdrawer-timber", version.ref = "debugDrawerVersion" }
debugdrawer-networkQuality = { module = "com.github.lenguyenthanh.debugdrawer:debugdrawer-network-quality", version.ref = "debugDrawerVersion" }

# Utils
timber = { module = "com.jakewharton.timber:timber", version.ref = "timberVersion" }
scalpel = { module = "com.jakewharton.scalpel:scalpel", version.ref = "scalpelVersion" }
glide-runtime = { module = "com.github.bumptech.glide:glide", version.ref = "glideVersion" }
glide-compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glideVersion" }

# Network
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttpVersion" }
retrofit-runtime = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofitVersion" }
retrofit-adapter-rxjava2 = { module = "com.squareup.retrofit2:adapter-rxjava2", version.ref = "retrofitVersion" }
retrofit-converter-simplexml = { module = "com.squareup.retrofit2:converter-simplexml", version.ref = "retrofitVersion" }
gson = { module = "com.google.code.gson:gson", version.ref = "gsonVersion" }

# Testing
junit = { module = "junit:junit", version.ref = "junitVersion" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlinVersion" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlinVersion" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "supportTestVersion" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "supportTestVersion" }

plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinVersion" }
plugin-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
plugin-android = "com.android.tools.build:gradle:7.2.2"

[plugins]
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
